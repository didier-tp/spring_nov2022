package tp.appliSpring;

import org.mycontrib.mysecurity.config.MySecuritySimpleConfigurer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Profile;
import org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Component;

/*
 IF THIS CLASS IS DESACTIVATED , A DEFAULT IMPLEMENATION WILL BE USED
 org.mycontrib.mysecurity.config.MySecuritySimpleConfigurerDefaultImpl
 with the following configuration:
 .withUser("user1").password(passwordEncoder.encode("pwd1")).roles("USER")
  .and().withUser("admin1").password(passwordEncoder.encode("pwd1")).roles("ADMIN")
  .and().withUser("user2").password(passwordEncoder.encode("pwd2")).roles("USER")
  .and().withUser("admin2").password(passwordEncoder.encode("pwd2")).roles("ADMIN");
 */


//@Component
@Profile("withSecurity")
public class MySecuritySimpleConfigurerImpl implements MySecuritySimpleConfigurer {

	
	private BCryptPasswordEncoder passwordEncoder;
	
	@Autowired
	public MySecuritySimpleConfigurerImpl(BCryptPasswordEncoder passwordEncoder){
		this.passwordEncoder=passwordEncoder;
	}
	
	@Override
	public void configureDefaultUsers(UserDetailsManagerConfigurer udmc) {
		udmc
		.withUser("user1").password(passwordEncoder.encode("mypwd1")).roles("USER")
		.and().withUser("admin1").password(passwordEncoder.encode("mypwd1")).roles("ADMIN")
		.and().withUser("user2").password(passwordEncoder.encode("mypwd2")).roles("USER")
		.and().withUser("admin2").password(passwordEncoder.encode("mypwd2")).roles("ADMIN");
	}

}
